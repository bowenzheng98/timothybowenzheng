{"version":3,"sources":["components/Home.module.css","components/brandsboard.png","components/art-board.png","components/About.js","components/Home.js","components/Navbar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","About","className","Home","useState","nextMove","setNextMove","animated","setAnimated","moveRight","setMoveRight","moveLeft","setMoveLeft","moveDown","setMoveDown","moveUp","setMoveUp","home","centerImageContainer","pos1","setPos1","leftImageContainer","pos2","setPos2","pos1Visible","setPos1Visible","handleClick","setTimeout","randomnumber","Math","floor","random","rightImageContainer","bottomImageContainer","topImageContainer","clsx","src","image","onClick","alt","art","Navbar","style","textDecoration","to","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.61dc5eaf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"page-layout\":\"Home_page-layout__1_k2B\",\"Page-child-center\":\"Home_Page-child-center__38cMD\",\"animated\":\"Home_animated__3x1lJ\",\"moveRight\":\"Home_moveRight__2W2cm\",\"moveLeft\":\"Home_moveLeft__132wO\",\"moveDown\":\"Home_moveDown__2wCwa\",\"moveUp\":\"Home_moveUp__2Revl\",\"centerImageContainer\":\"Home_centerImageContainer__16B5l\",\"leftImageContainer\":\"Home_leftImageContainer__3wpOz\",\"rightImageContainer\":\"Home_rightImageContainer__6GixV\",\"topImageContainer\":\"Home_topImageContainer__1M2Ub\",\"bottomImageContainer\":\"Home_bottomImageContainer__1_dUK\"};","module.exports = __webpack_public_path__ + \"static/media/brandsboard.6b17ace1.png\";","module.exports = __webpack_public_path__ + \"static/media/art-board.2e72fe2c.png\";","import React from 'react';\nimport \"./About.css\";\n\nfunction About() {\n    return(\n        <div className=\"Page-layout\">\n            <div className=\"Page-child-center\">\n                About me\n            </div>\n        </div>\n    );\n}\n\nexport default About;","import React, { useState, useEffect } from \"react\";\nimport home from \"./Home.module.css\";\nimport image from \"./brandsboard.png\";\nimport art from \"./art-board.png\";\nimport clsx from \"clsx\";\n\nfunction Home() {\n  const [nextMove, setNextMove] = useState(0);\n  const [animated, setAnimated] = useState(false);\n\n  const [moveRight, setMoveRight] = useState(false);\n  const [moveLeft, setMoveLeft] = useState(false);\n  const [moveDown, setMoveDown] = useState(false);\n  const [moveUp, setMoveUp] = useState(false);\n\n  const [pos1, setPos1] = useState(home.centerImageContainer);\n  const [pos2, setPos2] = useState(home.leftImageContainer);\n\n  const [pos1Visible, setPos1Visible] = useState(true);\n\n  function handleClick() {\n    setAnimated(true);\n    switch (nextMove) {\n      case 0:\n        setMoveRight(true);\n        break;\n      case 1:\n        setMoveLeft(true);\n        break;\n      case 2:\n        setMoveUp(true);\n        break;\n      case 3:\n        setMoveDown(true);\n        break;\n      default:\n        break;\n    }\n    setTimeout(() => {\n      var randomnumber = Math.floor(Math.random() * (3 - 0 + 1)) + 0;\n      setNextMove(randomnumber);\n      if (pos1Visible) {\n        setPos2(home.centerImageContainer);\n        switch (randomnumber) {\n          case 0:\n            setPos1(home.leftImageContainer);\n            break;\n          case 1:\n            setPos1(home.rightImageContainer);\n            break;\n          case 2:\n            setPos1(home.bottomImageContainer);\n            break;\n          case 3:\n            setPos1(home.topImageContainer);\n            break;\n          default:\n            break;\n        }\n      } else {\n        setPos1(home.centerImageContainer);\n        switch (randomnumber) {\n          case 0:\n            setPos2(home.leftImageContainer);\n            break;\n          case 1:\n            setPos2(home.rightImageContainer);\n            break;\n          case 2:\n            setPos2(home.bottomImageContainer);\n            break;\n          case 3:\n            setPos2(home.topImageContainer);\n            break;\n          default:\n            break;\n        }\n      }\n      setAnimated(false);\n      setMoveRight(false);\n      setMoveLeft(false);\n      setMoveUp(false);\n      setMoveDown(false);\n      setPos1Visible(!pos1Visible);\n    }, 1500);\n  }\n\n  return (\n    <div className=\"page-layout\">\n      <div\n        className={clsx(\n          pos1,\n          animated ? home.animated : null,\n          moveRight ? home.moveRight : null,\n          moveLeft ? home.moveLeft : null,\n          moveUp ? home.moveUp : null,\n          moveDown ? home.moveDown : null,\n        )}\n      >\n        <img src={image} onClick={handleClick} alt=\"\"></img>\n      </div>\n      <div\n        className={clsx(\n          pos2,\n          animated ? home.animated : null,\n          moveRight ? home.moveRight : null,\n          moveLeft ? home.moveLeft : null,\n          moveUp ? home.moveUp : null,\n          moveDown ? home.moveDown : null,\n        )}\n      >\n        <img src={art} onClick={handleClick} alt=\"\"></img>\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Navbar.css\";\n\nfunction Navbar() {\n  return (\n    <div className=\"navbar\">\n      <ul>\n        <div className=\"navbar-left-item\">\n          <li>\n            <Link style={{ textDecoration: \"none\" }} to=\"/\">\n              Home\n            </Link>\n          </li>\n        </div>\n        <div className=\"navbar-right-item\">\n          <li>\n            <Link style={{ textDecoration: \"none\" }} to=\"/about\">\n              About\n            </Link>\n          </li>\n        </div>\n      </ul>\n    </div>\n  );\n}\n\nexport default Navbar;\n","import React from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport About from \"./components/About\";\nimport Home from \"./components/Home\";\nimport Navbar from \"./components/Navbar\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Navbar />\n      <Route exact path=\"/\" component={Home} />\n      <Route path=\"/about\" component={About} />\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}